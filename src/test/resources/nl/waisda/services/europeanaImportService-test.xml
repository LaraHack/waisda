<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xsi:schemaLocation="
            http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <props>
                <prop key="waisda.import.europeana.baseurl">http://preview.europeana.eu/api/v2/search.json</prop>
                <prop key="waisda.import.europeana.apikey">XxxsEZoWj</prop>
                <prop key="waisda.import.europeana.privkey">ZyFhKLsYC</prop>
                <prop key="waisda.import.europeana.rowsperquery">12</prop>
                <prop key="waisda.import.europeana.profile">minimal</prop>
                <prop key="waisda.import.europeana.videoextensions">.mp4, .avi, .mpg</prop>
                <prop key="jdbc.driver">com.mysql.jdbc.Driver</prop>
                <prop key="jdbc.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="jdbc.url">jdbc:mysql://localhost:3306/waisda?characterEncoding=UTF-8&amp;useUnicode=true</prop>
                <prop key="jdbc.username">root</prop>
                <prop key="jdbc.password">qwertyuiop</prop>
                <prop key="jpa.test.persistenceXmlLocation">classpath:persistence-test.xml</prop>
                <prop key="jpa.database">MYSQL</prop>
                <prop key="jpa.showSql">true</prop>
                <prop key="jpa.formatSql">true</prop>
                <prop key="jpa.generateDdl">true</prop>
                <prop key="jpa.persistenceUnitName">nl.waisda</prop>
                <prop key="jpa.hbm2ddl.auto">validate</prop>
            </props>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
  		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/waisda?characterEncoding=UTF-8&amp;useUnicode=true" />
		<property name="username" value="root" />
		<property name="password" value="qwertyuiop" />
	</bean>

    <!--bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource"/>
    </bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="${jpa.database}" />
		<property name="showSql" value="${jpa.showSql}" />
		<property name="generateDdl" value="${jpa.generateDdl}" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="${jpa.test.persistenceXmlLocation}" />
		<property name="persistenceUnitName" value="${jpa.persistenceUnitName}" />
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaAdapter" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.archive.autodetection">class, hbm</prop>
				<prop key="hibernate.hbm2ddl.auto">${jpa.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${jpa.showSql}</prop>
				<prop key="hibernate.format_sql">${jpa.formatSql}</prop>
				<prop key="hibernate.dialect">${jdbc.dialect}</prop>
			</props>
		</property>
	</bean>

    <!--bean class="org.mockito.Mockito" factory-method="mock">
    <constructor-arg value=""/>
    </bean-->

    <bean class="nl.waisda.services.EuropeanaImportService"/>
    <bean class="org.apache.http.impl.client.DefaultHttpClient"/>
    <bean class="nl.waisda.repositories.VideoRepository"/>
    <bean class="nl.waisda.services.TransactionService"/>
    <bean id="europeanaImportThreadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" autowire="byName">
        <property name="corePoolSize" value="1" />
        <property name="maxPoolSize" value="1" />
        <property name="queueCapacity" value="1" />
    </bean>
</beans>


